>>> from news.models import Giornalista 
>>> Giornalista.object.all()
Traceback (most recent call last):
  File "<console>", line 1, in <module>
AttributeError: type object 'Giornalista' has no attribute 'object'. Did you mean: 'objects'?
>>> Giornalista.objects.all() 
<QuerySet []>
>>> Giornalista              
<class 'news.models.Giornalista'>
>>> g1=Giornalista(nome="Mario",cognome="Rossi") 
>>> g1.save()
>>> Giornalista.objects.all() 
<QuerySet [<Giornalista: Mario Rossi>]>
>>> g1=Giornalista(Simone Ciniltani)             
  File "<console>", line 1
    g1=Giornalista(Simone Ciniltani)
                   ^^^^^^^^^^^^^^^^
SyntaxError: invalid syntax. Perhaps you forgot a comma?
>>> g1=Giornalista(Simone,Ciniltani) 
Traceback (most recent call last):
  File "<console>", line 1, in <module>
NameError: name 'Simone' is not defined
>>> g1=Giornalista(name=Simone,Ciniltani) 
  File "<console>", line 1
    g1=Giornalista(name=Simone,Ciniltani)
                                        ^
SyntaxError: positional argument follows keyword argument
>>> g1=Giornalista(name=Simone,cognome=Ciniltani) 
Traceback (most recent call last):
  File "<console>", line 1, in <module>
NameError: name 'Simone' is not defined
>>> g1=Giornalista("Simone","Ciniltani")  
>>> g1.save()                             
Traceback (most recent call last):
  File "C:\Users\5Ci\Documents\django\env\Lib\site-packages\django\db\models\fields\__init__.py", line 2123, in get_prep_value
    return int(value)
           ^^^^^^^^^^
ValueError: invalid literal for int() with base 10: 'Simone'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "<console>", line 1, in <module>
  File "C:\Users\5Ci\Documents\django\env\Lib\site-packages\django\db\models\base.py", line 891, in save
    self.save_base(
  File "C:\Users\5Ci\Documents\django\env\Lib\site-packages\django\db\models\base.py", line 997, in save_base
    updated = self._save_table(
              ^^^^^^^^^^^^^^^^^
  File "C:\Users\5Ci\Documents\django\env\Lib\site-packages\django\db\models\base.py", line 1129, in _save_table
    updated = self._do_update(
              ^^^^^^^^^^^^^^^^
  File "C:\Users\5Ci\Documents\django\env\Lib\site-packages\django\db\models\base.py", line 1173, in _do_update
    filtered = base_qs.filter(pk=pk_val)
               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\5Ci\Documents\django\env\Lib\site-packages\django\db\models\query.py", line 1476, in filter
    return self._filter_or_exclude(False, args, kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\5Ci\Documents\django\env\Lib\site-packages\django\db\models\query.py", line 1494, in _filter_or_exclude
    clone._filter_or_exclude_inplace(negate, args, kwargs)
  File "C:\Users\5Ci\Documents\django\env\Lib\site-packages\django\db\models\query.py", line 1501, in _filter_or_exclude_inplace
    self._query.add_q(Q(*args, **kwargs))
  File "C:\Users\5Ci\Documents\django\env\Lib\site-packages\django\db\models\sql\query.py", line 1609, in add_q
    clause, _ = self._add_q(q_object, self.used_aliases)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\5Ci\Documents\django\env\Lib\site-packages\django\db\models\sql\query.py", line 1641, in _add_q
    child_clause, needed_inner = self.build_filter(
                                 ^^^^^^^^^^^^^^^^^^
  File "C:\Users\5Ci\Documents\django\env\Lib\site-packages\django\db\models\sql\query.py", line 1555, in build_filter
    condition = self.build_lookup(lookups, col, value)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\5Ci\Documents\django\env\Lib\site-packages\django\db\models\sql\query.py", line 1385, in build_lookup
    lookup = lookup_class(lhs, rhs)
             ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\5Ci\Documents\django\env\Lib\site-packages\django\db\models\lookups.py", line 30, in __init__
    self.rhs = self.get_prep_lookup()
               ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\5Ci\Documents\django\env\Lib\site-packages\django\db\models\lookups.py", line 369, in get_prep_lookup
    return super().get_prep_lookup()
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\5Ci\Documents\django\env\Lib\site-packages\django\db\models\lookups.py", line 88, in get_prep_lookup
    return self.lhs.output_field.get_prep_value(self.rhs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\5Ci\Documents\django\env\Lib\site-packages\django\db\models\fields\__init__.py", line 2125, in get_prep_value
    raise e.__class__(
ValueError: Field 'id' expected a number but got 'Simone'.
>>> Giornalista.objects.all()
<QuerySet [<Giornalista: Mario Rossi>]>
>>> g2=Giornalista("Simone","Ciniltani") 
>>> g2.save()
Traceback (most recent call last):
  File "C:\Users\5Ci\Documents\django\env\Lib\site-packages\django\db\models\fields\__init__.py", line 2123, in get_prep_value
    return int(value)
           ^^^^^^^^^^
ValueError: invalid literal for int() with base 10: 'Simone'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "<console>", line 1, in <module>
  File "C:\Users\5Ci\Documents\django\env\Lib\site-packages\django\db\models\base.py", line 891, in save
    self.save_base(
  File "C:\Users\5Ci\Documents\django\env\Lib\site-packages\django\db\models\base.py", line 997, in save_base
    updated = self._save_table(
              ^^^^^^^^^^^^^^^^^
  File "C:\Users\5Ci\Documents\django\env\Lib\site-packages\django\db\models\base.py", line 1129, in _save_table
    updated = self._do_update(
              ^^^^^^^^^^^^^^^^
  File "C:\Users\5Ci\Documents\django\env\Lib\site-packages\django\db\models\base.py", line 1173, in _do_update
    filtered = base_qs.filter(pk=pk_val)
               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\5Ci\Documents\django\env\Lib\site-packages\django\db\models\query.py", line 1476, in filter
    return self._filter_or_exclude(False, args, kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\5Ci\Documents\django\env\Lib\site-packages\django\db\models\query.py", line 1494, in _filter_or_exclude
    clone._filter_or_exclude_inplace(negate, args, kwargs)
  File "C:\Users\5Ci\Documents\django\env\Lib\site-packages\django\db\models\query.py", line 1501, in _filter_or_exclude_inplace
    self._query.add_q(Q(*args, **kwargs))
  File "C:\Users\5Ci\Documents\django\env\Lib\site-packages\django\db\models\sql\query.py", line 1609, in add_q
    clause, _ = self._add_q(q_object, self.used_aliases)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\5Ci\Documents\django\env\Lib\site-packages\django\db\models\sql\query.py", line 1641, in _add_q
    child_clause, needed_inner = self.build_filter(
                                 ^^^^^^^^^^^^^^^^^^
  File "C:\Users\5Ci\Documents\django\env\Lib\site-packages\django\db\models\sql\query.py", line 1555, in build_filter
    condition = self.build_lookup(lookups, col, value)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\5Ci\Documents\django\env\Lib\site-packages\django\db\models\sql\query.py", line 1385, in build_lookup
    lookup = lookup_class(lhs, rhs)
             ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\5Ci\Documents\django\env\Lib\site-packages\django\db\models\lookups.py", line 30, in __init__
    self.rhs = self.get_prep_lookup()
               ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\5Ci\Documents\django\env\Lib\site-packages\django\db\models\lookups.py", line 369, in get_prep_lookup
    return super().get_prep_lookup()
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\5Ci\Documents\django\env\Lib\site-packages\django\db\models\lookups.py", line 88, in get_prep_lookup
    return self.lhs.output_field.get_prep_value(self.rhs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\5Ci\Documents\django\env\Lib\site-packages\django\db\models\fields\__init__.py", line 2125, in get_prep_value
    raise e.__class__(
ValueError: Field 'id' expected a number but got 'Simone'.
>>> g2=Giornalista(nome="Simone",cognome="Ciniltani") 
>>> g2.save()
>>> Giornalista.objects.all()
<QuerySet [<Giornalista: Mario Rossi>, <Giornalista: Simone Ciniltani>]>
>>> g1.nome="Matteo" 
>>> g1.save()
Traceback (most recent call last):
  File "C:\Users\5Ci\Documents\django\env\Lib\site-packages\django\db\models\fields\__init__.py", line 2123, in get_prep_value
    return int(value)
           ^^^^^^^^^^
ValueError: invalid literal for int() with base 10: 'Simone'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "<console>", line 1, in <module>
  File "C:\Users\5Ci\Documents\django\env\Lib\site-packages\django\db\models\base.py", line 891, in save
    self.save_base(
  File "C:\Users\5Ci\Documents\django\env\Lib\site-packages\django\db\models\base.py", line 997, in save_base
    updated = self._save_table(
              ^^^^^^^^^^^^^^^^^
  File "C:\Users\5Ci\Documents\django\env\Lib\site-packages\django\db\models\base.py", line 1129, in _save_table
    updated = self._do_update(
              ^^^^^^^^^^^^^^^^
  File "C:\Users\5Ci\Documents\django\env\Lib\site-packages\django\db\models\base.py", line 1173, in _do_update
    filtered = base_qs.filter(pk=pk_val)
               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\5Ci\Documents\django\env\Lib\site-packages\django\db\models\query.py", line 1476, in filter
    return self._filter_or_exclude(False, args, kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\5Ci\Documents\django\env\Lib\site-packages\django\db\models\query.py", line 1494, in _filter_or_exclude
    clone._filter_or_exclude_inplace(negate, args, kwargs)
  File "C:\Users\5Ci\Documents\django\env\Lib\site-packages\django\db\models\query.py", line 1501, in _filter_or_exclude_inplace
    self._query.add_q(Q(*args, **kwargs))
  File "C:\Users\5Ci\Documents\django\env\Lib\site-packages\django\db\models\sql\query.py", line 1609, in add_q
    clause, _ = self._add_q(q_object, self.used_aliases)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\5Ci\Documents\django\env\Lib\site-packages\django\db\models\sql\query.py", line 1641, in _add_q
    child_clause, needed_inner = self.build_filter(
                                 ^^^^^^^^^^^^^^^^^^
  File "C:\Users\5Ci\Documents\django\env\Lib\site-packages\django\db\models\sql\query.py", line 1555, in build_filter
    condition = self.build_lookup(lookups, col, value)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\5Ci\Documents\django\env\Lib\site-packages\django\db\models\sql\query.py", line 1385, in build_lookup
    lookup = lookup_class(lhs, rhs)
             ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\5Ci\Documents\django\env\Lib\site-packages\django\db\models\lookups.py", line 30, in __init__
    self.rhs = self.get_prep_lookup()
               ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\5Ci\Documents\django\env\Lib\site-packages\django\db\models\lookups.py", line 369, in get_prep_lookup
    return super().get_prep_lookup()
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\5Ci\Documents\django\env\Lib\site-packages\django\db\models\lookups.py", line 88, in get_prep_lookup
    return self.lhs.output_field.get_prep_value(self.rhs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\5Ci\Documents\django\env\Lib\site-packages\django\db\models\fields\__init__.py", line 2125, in get_prep_value
    raise e.__class__(
ValueError: Field 'id' expected a number but got 'Simone'.
>>> Giornalista.objects.all()
<QuerySet [<Giornalista: Mario Rossi>, <Giornalista: Simone Ciniltani>]>
>>> g1.nome="Matteo"
>>> g1.cognome="Rossi" 
>>> g1.save()
Traceback (most recent call last):
  File "C:\Users\5Ci\Documents\django\env\Lib\site-packages\django\db\models\fields\__init__.py", line 2123, in get_prep_value
    return int(value)
           ^^^^^^^^^^
ValueError: invalid literal for int() with base 10: 'Simone'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "<console>", line 1, in <module>
  File "C:\Users\5Ci\Documents\django\env\Lib\site-packages\django\db\models\base.py", line 891, in save
    self.save_base(
  File "C:\Users\5Ci\Documents\django\env\Lib\site-packages\django\db\models\base.py", line 997, in save_base
    updated = self._save_table(
              ^^^^^^^^^^^^^^^^^
  File "C:\Users\5Ci\Documents\django\env\Lib\site-packages\django\db\models\base.py", line 1129, in _save_table
    updated = self._do_update(
              ^^^^^^^^^^^^^^^^
  File "C:\Users\5Ci\Documents\django\env\Lib\site-packages\django\db\models\base.py", line 1173, in _do_update
    filtered = base_qs.filter(pk=pk_val)
               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\5Ci\Documents\django\env\Lib\site-packages\django\db\models\query.py", line 1476, in filter
    return self._filter_or_exclude(False, args, kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\5Ci\Documents\django\env\Lib\site-packages\django\db\models\query.py", line 1494, in _filter_or_exclude
    clone._filter_or_exclude_inplace(negate, args, kwargs)
  File "C:\Users\5Ci\Documents\django\env\Lib\site-packages\django\db\models\query.py", line 1501, in _filter_or_exclude_inplace
    self._query.add_q(Q(*args, **kwargs))
  File "C:\Users\5Ci\Documents\django\env\Lib\site-packages\django\db\models\sql\query.py", line 1609, in add_q
    clause, _ = self._add_q(q_object, self.used_aliases)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\5Ci\Documents\django\env\Lib\site-packages\django\db\models\sql\query.py", line 1641, in _add_q
    child_clause, needed_inner = self.build_filter(
                                 ^^^^^^^^^^^^^^^^^^
  File "C:\Users\5Ci\Documents\django\env\Lib\site-packages\django\db\models\sql\query.py", line 1555, in build_filter
    condition = self.build_lookup(lookups, col, value)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\5Ci\Documents\django\env\Lib\site-packages\django\db\models\sql\query.py", line 1385, in build_lookup
    lookup = lookup_class(lhs, rhs)
             ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\5Ci\Documents\django\env\Lib\site-packages\django\db\models\lookups.py", line 30, in __init__
    self.rhs = self.get_prep_lookup()
               ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\5Ci\Documents\django\env\Lib\site-packages\django\db\models\lookups.py", line 369, in get_prep_lookup
    return super().get_prep_lookup()
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\5Ci\Documents\django\env\Lib\site-packages\django\db\models\lookups.py", line 88, in get_prep_lookup
    return self.lhs.output_field.get_prep_value(self.rhs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\5Ci\Documents\django\env\Lib\site-packages\django\db\models\fields\__init__.py", line 2125, in get_prep_value
    raise e.__class__(
ValueError: Field 'id' expected a number but got 'Simone'.
>>>
>>> g3=Giornalista()
>>> g3.nome="Leonardo" 
>>> g3.cognome="DiCaprio" 
>>> g3.save()
>>> g1.id
'Simone'
>>> g2.id
2
>>> g3.ig
Traceback (most recent call last):
  File "<console>", line 1, in <module>
AttributeError: 'Giornalista' object has no attribute 'ig'
>>> g3.id
3
>>> Giornalista.objects.all()
<QuerySet [<Giornalista: Mario Rossi>, <Giornalista: Simone Ciniltani>, <Giornalista: Leonardo DiCaprio>]>
>>> g1.id=1
>>> g1.save()
>>> g1.id
1
>>> g1.nome   
'Matteo'
>>> g1.cognome
'Rossi'
>>> Giornalista.objects.all()
<QuerySet [<Giornalista: Matteo Rossi>, <Giornalista: Simone Ciniltani>, <Giornalista: Leonardo DiCaprio>]>
>>> g3.pk
3
>>> g1.pk 
1
>>> g2.pk
2
>>> Giornalista.objects.exclude("Rossi") 
Traceback (most recent call last):
  File "<console>", line 1, in <module>
  File "C:\Users\5Ci\Documents\django\env\Lib\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\5Ci\Documents\django\env\Lib\site-packages\django\db\models\query.py", line 1484, in exclude
    return self._filter_or_exclude(True, args, kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\5Ci\Documents\django\env\Lib\site-packages\django\db\models\query.py", line 1494, in _filter_or_exclude
    clone._filter_or_exclude_inplace(negate, args, kwargs)
  File "C:\Users\5Ci\Documents\django\env\Lib\site-packages\django\db\models\query.py", line 1499, in _filter_or_exclude_inplace
    self._query.add_q(~Q(*args, **kwargs))
  File "C:\Users\5Ci\Documents\django\env\Lib\site-packages\django\db\models\sql\query.py", line 1609, in add_q
    clause, _ = self._add_q(q_object, self.used_aliases)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\5Ci\Documents\django\env\Lib\site-packages\django\db\models\sql\query.py", line 1641, in _add_q
    child_clause, needed_inner = self.build_filter(
                                 ^^^^^^^^^^^^^^^^^^
  File "C:\Users\5Ci\Documents\django\env\Lib\site-packages\django\db\models\sql\query.py", line 1488, in build_filter
    arg, value = filter_expr
    ^^^^^^^^^^
ValueError: too many values to unpack (expected 2)
>>> Giornalista.objects.exclude(cognome="Rossi") 
<QuerySet [<Giornalista: Simone Ciniltani>, <Giornalista: Leonardo DiCaprio>]>
>>> Giornalista.objects.exclude(cognome="dicaprio") 
<QuerySet [<Giornalista: Matteo Rossi>, <Giornalista: Simone Ciniltani>, <Giornalista: Leonardo DiCaprio>]>
>>> Giornalista.objects.exclude(cognome="CiCaprio") 
<QuerySet [<Giornalista: Matteo Rossi>, <Giornalista: Simone Ciniltani>, <Giornalista: Leonardo DiCaprio>]>
>>> Giornalista.objects.exclude(cognome="DiCaprio") 
<QuerySet [<Giornalista: Matteo Rossi>, <Giornalista: Simone Ciniltani>]>
>>> Giornalista.objects.exclude(cognome="diCaprio") 
<QuerySet [<Giornalista: Matteo Rossi>, <Giornalista: Simone Ciniltani>, <Giornalista: Leonardo DiCaprio>]>
>>> for g in Giornalista.objects.all():
...
...
... g.nome
  File "<console>", line 4
    g.nome
    ^
IndentationError: expected an indented block after 'for' statement on line 1
>>> for g in Giornalista.objects.all():
...     g.nome
...
'Matteo'
'Simone'
'Leonardo'
>>>
>>>
>>>     g.nome
  File "<console>", line 1
        g.nome
    ^
IndentationError: unexpected indent
>>> for g in Giornalista.objects.all():
... g.nome
  File "<console>", line 2
    g.nome
    ^
IndentationError: expected an indented block after 'for' statement on line 1
>>>
>>> for g in Giornalista.objects.all():
...     g.nome 
...
'Matteo'
'Simone'
'Leonardo'
>>> for g in Giornalista.objects.all():
...     g.cognome
...
'Rossi'
'Ciniltani'
'DiCaprio'
>>> for g in Giornalista.objects.all():
...     g.id  
...
1
2
3
>>> giorn = Giornalista.objects.get(id=1) 
>>> giorn
<Giornalista: Matteo Rossi>
>>> giorn.delete()
(1, {'news.Giornalista': 1})
>>> Giornalista.objects.all()                       
<QuerySet [<Giornalista: Simone Ciniltani>, <Giornalista: Leonardo DiCaprio>]>
>>>
>>> from news.models.py
  File "<console>", line 1
    from news.models.py
SyntaxError: invalid syntax
>>> from news.models import Articolo
>>>
>>> a1 = Articolo() 
>>> a1.titolo="Primo Articolo!"
>>> a1.contenuto="Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed nec volutpat velit. Phasellus sagittis tempus nulla"     
>>> a1.giornalista = g1
>>> a1.save()
Traceback (most recent call last):
  File "C:\Users\5Ci\Documents\django\env\Lib\site-packages\django\db\utils.py", line 98, in inner
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
sqlite3.IntegrityError: FOREIGN KEY constraint failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "<console>", line 1, in <module>
  File "C:\Users\5Ci\Documents\django\env\Lib\site-packages\django\db\models\base.py", line 891, in save
    self.save_base(
  File "C:\Users\5Ci\Documents\django\env\Lib\site-packages\django\db\models\base.py", line 997, in save_base
    updated = self._save_table(
              ^^^^^^^^^^^^^^^^^
  File "C:\Users\5Ci\Documents\django\env\Lib\site-packages\django\db\models\base.py", line 1160, in _save_table
    results = self._do_insert(
              ^^^^^^^^^^^^^^^^
  File "C:\Users\5Ci\Documents\django\env\Lib\site-packages\django\db\models\base.py", line 1201, in _do_insert
    return manager._insert(
           ^^^^^^^^^^^^^^^^
  File "C:\Users\5Ci\Documents\django\env\Lib\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\5Ci\Documents\django\env\Lib\site-packages\django\db\models\query.py", line 1847, in _insert
    return query.get_compiler(using=using).execute_sql(returning_fields)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\5Ci\Documents\django\env\Lib\site-packages\django\db\models\sql\compiler.py", line 1848, in execute_sql
    self.connection.ops.fetch_returned_insert_columns(
  File "C:\Users\5Ci\Documents\django\env\Lib\site-packages\django\db\backends\base\operations.py", line 216, in fetch_returned_insert_columns
    return cursor.fetchone()
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\5Ci\Documents\django\env\Lib\site-packages\django\db\utils.py", line 97, in inner
    with self:
         ^^^^
  File "C:\Users\5Ci\Documents\django\env\Lib\site-packages\django\db\utils.py", line 91, in __exit__
    raise dj_exc_value.with_traceback(traceback) from exc_value
  File "C:\Users\5Ci\Documents\django\env\Lib\site-packages\django\db\utils.py", line 98, in inner
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
django.db.utils.IntegrityError: FOREIGN KEY constraint failed
>>> g1                 
<Giornalista: Matteo Rossi>
>>> a1.giornalista=g1
>>> a1.save()
Traceback (most recent call last):
  File "C:\Users\5Ci\Documents\django\env\Lib\site-packages\django\db\utils.py", line 98, in inner
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
sqlite3.IntegrityError: FOREIGN KEY constraint failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "<console>", line 1, in <module>
  File "C:\Users\5Ci\Documents\django\env\Lib\site-packages\django\db\models\base.py", line 891, in save
    self.save_base(
  File "C:\Users\5Ci\Documents\django\env\Lib\site-packages\django\db\models\base.py", line 997, in save_base
    updated = self._save_table(
              ^^^^^^^^^^^^^^^^^
  File "C:\Users\5Ci\Documents\django\env\Lib\site-packages\django\db\models\base.py", line 1160, in _save_table
    results = self._do_insert(
              ^^^^^^^^^^^^^^^^
  File "C:\Users\5Ci\Documents\django\env\Lib\site-packages\django\db\models\base.py", line 1201, in _do_insert
    return manager._insert(
           ^^^^^^^^^^^^^^^^
  File "C:\Users\5Ci\Documents\django\env\Lib\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\5Ci\Documents\django\env\Lib\site-packages\django\db\models\query.py", line 1847, in _insert
    return query.get_compiler(using=using).execute_sql(returning_fields)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\5Ci\Documents\django\env\Lib\site-packages\django\db\models\sql\compiler.py", line 1848, in execute_sql
    self.connection.ops.fetch_returned_insert_columns(
  File "C:\Users\5Ci\Documents\django\env\Lib\site-packages\django\db\backends\base\operations.py", line 216, in fetch_returned_insert_columns
    return cursor.fetchone()
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\5Ci\Documents\django\env\Lib\site-packages\django\db\utils.py", line 97, in inner
    with self:
         ^^^^
  File "C:\Users\5Ci\Documents\django\env\Lib\site-packages\django\db\utils.py", line 91, in __exit__
    raise dj_exc_value.with_traceback(traceback) from exc_value
  File "C:\Users\5Ci\Documents\django\env\Lib\site-packages\django\db\utils.py", line 98, in inner
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
django.db.utils.IntegrityError: FOREIGN KEY constraint failed
>>> g1=Giornalista.objects.get(pk=1) 
Traceback (most recent call last):
  File "<console>", line 1, in <module>
  File "C:\Users\5Ci\Documents\django\env\Lib\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\5Ci\Documents\django\env\Lib\site-packages\django\db\models\query.py", line 649, in get
    raise self.model.DoesNotExist(
news.models.Giornalista.DoesNotExist: Giornalista matching query does not exist.
>>> g1=Giornalista.objects.get(pk=2) 
>>> g1
<Giornalista: Simone Ciniltani>
>>> a1.giornalista=g2
>>> a1.save()
>>> a1
<Articolo: Primo Articolo!>
>>> a1.contenuto
'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed nec volutpat velit. Phasellus sagittis tempus nulla'
>>> nuovo=Articolo(titolo="Secondo Articolo",contenuto="Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed nec volutpat velit. Phasellus sagittis tempus nulla",giornalista=Giornalista.objects.get(id=3))
>>> nuovo.titolo
'Secondo Articolo'
>>> nuovo.save()
>>> exit()    